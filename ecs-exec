#!/usr/bin/env python3
import sys
import subprocess
import json
import os

if len(sys.argv) < 3:
    print("Usage: ecs-exec <cluster> <service> [task-arn]")
    sys.exit(1)

cluster, service = sys.argv[1], sys.argv[2]
task_arn = sys.argv[3] if len(sys.argv) > 3 else None
container = os.environ.get('CONTAINER', 'app')

# Get task ARN if not provided
if not task_arn:
    try:
        result = subprocess.run(
            ['aws', 'ecs', 'list-tasks', '--cluster', cluster, 
             '--service-name', service, '--desired-status', 'RUNNING'],
            capture_output=True, text=True, check=True
        )
        tasks = json.loads(result.stdout)['taskArns']
        if not tasks:
            print(f"No running tasks found for {service} in {cluster}")
            sys.exit(1)
        task_arn = tasks[0]
        print(f"Using task: {task_arn}")
    except subprocess.CalledProcessError as e:
        print(f"AWS Error: {e.stderr}")
        sys.exit(1)
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)

# Execute command
subprocess.run([
    'aws', 'ecs', 'execute-command',
    '--cluster', cluster,
    '--container', container,
    '--command', 'sh',
    '--interactive',
    '--task', task_arn
])
